1. Funciones incorporadas (Built-in)

Estas funciones se pueden usar directamente con listas:

len(lista): Devuelve la longitud de la lista.

max(lista): Devuelve el valor máximo de la lista.

min(lista): Devuelve el valor mínimo de la lista.

sum(lista): Devuelve la suma de los elementos de la lista (si son numéricos).

sorted(lista): Devuelve una nueva lista ordenada (sin modificar la original).

list(iterable): Convierte un iterable (como una tupla o un rango) en una lista.


2. Métodos de listas

Los métodos son funciones específicas de las listas que se llaman con la sintaxis lista.metodo():

append(elemento): Agrega un elemento al final de la lista.

extend(iterable): Agrega todos los elementos de un iterable (otra lista, tupla, etc.) al final de la lista.

insert(indice, elemento): Inserta un elemento en una posición específica.

remove(elemento): Elimina la primera aparición de un elemento.

pop([indice]): Elimina y devuelve el elemento en el índice especificado (por defecto, el último).

clear(): Elimina todos los elementos de la lista.

index(elemento[, inicio[, fin]]): Devuelve el índice de la primera aparición de un elemento (opcionalmente dentro de un rango).

count(elemento): Devuelve el número de veces que un elemento aparece en la lista.

reverse(): Invierte el orden de los elementos en la lista.

sort(key=None, reverse=False): Ordena la lista en su lugar (puedes usar key para personalizar el criterio de ordenación y reverse=True para orden descendente).

copy(): Devuelve una copia superficial de la lista.


3. Ejemplos prácticos
# Crear una lista
mi_lista = [3, 1, 4, 1, 5, 9]

# Agregar elementos
mi_lista.append(2) # [3, 1, 4, 1, 5, 9, 2]

# Ordenar la lista
mi_lista.sort() # [1, 1, 2, 3, 4, 5, 9]

# Contar elementos
repeticiones = mi_lista.count(1) # 2

# Eliminar un elemento
mi_lista.remove(4) # [1, 1, 2, 3, 5, 9]

# Invertir la lista
mi_lista.reverse() # [9, 5, 3, 2, 1, 1]
Estas funciones y métodos te permiten trabajar con listas de manera eficiente y flexible.